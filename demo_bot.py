#!/usr/bin/env python3
"""
ForexBot AI Trading System - Demo Script
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–∫–∞–∑–∞ —Ä–∞–±–æ—Ç—ã –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –±–æ—Ç–∞
"""

import requests
import json
import time
import sys
from datetime import datetime

# –ë–∞–∑–æ–≤—ã–π URL API
API_BASE = "http://localhost:8000"

def print_header():
    """–í—ã–≤–æ–¥ –∑–∞–≥–æ–ª–æ–≤–∫–∞"""
    print("=" * 60)
    print("ü§ñ ForexBot AI Trading System - Demo")
    print("=" * 60)
    print()

def check_bot_status():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –±–æ—Ç–∞"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –±–æ—Ç–∞...")
    try:
        response = requests.get(f"{API_BASE}/api/status")
        if response.status_code == 200:
            data = response.json()
            print(f"‚úÖ –ë–æ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω")
            print(f"   –°—Ç–∞—Ç—É—Å: {'üü¢ –†–∞–±–æ—Ç–∞–µ—Ç' if data['is_running'] else 'üî¥ –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}")
            print(f"   –ü–æ–∑–∏—Ü–∏–∏: {data['open_positions']}")
            print(f"   –ë–∞–ª–∞–Ω—Å: ${data['balance']:.2f}")
            print(f"   –ö–∞–ø–∏—Ç–∞–ª: ${data['equity']:.2f}")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return False

def start_bot():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    print("\nüöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
    try:
        response = requests.post(
            f"{API_BASE}/api/control",
            json={"action": "start"}
        )
        if response.status_code == 200:
            data = response.json()
            print(f"‚úÖ {data['message']}")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}")
        return False

def get_account_info():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å—á–µ—Ç–µ"""
    print("\nüí∞ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—á–µ—Ç–µ:")
    try:
        response = requests.get(f"{API_BASE}/api/account")
        if response.status_code == 200:
            data = response.json()
            print(f"   –ë–∞–ª–∞–Ω—Å: ${data.get('balance', 0):.2f}")
            print(f"   –°–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –∫–∞–ø–∏—Ç–∞–ª: ${data.get('equity', 0):.2f}")
            print(f"   –ú–∞—Ä–∂–∞: ${data.get('margin', 0):.2f}")
            print(f"   –°–≤–æ–±–æ–¥–Ω–∞—è –º–∞—Ä–∂–∞: ${data.get('margin_free', 0):.2f}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö: {e}")

def get_token_info():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–æ–∫–µ–Ω–∞—Ö"""
    print("\nü™ô –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–∫–µ–Ω–∞—Ö:")
    try:
        response = requests.get(f"{API_BASE}/api/token/info")
        if response.status_code == 200:
            data = response.json()
            print(f"   –ù–∞–∑–≤–∞–Ω–∏–µ: {data.get('token_name', 'N/A')}")
            print(f"   –°–∏–º–≤–æ–ª: {data.get('token_symbol', 'N/A')}")
            print(f"   –ë–∞–ª–∞–Ω—Å: {data.get('token_balance', 0):.2f}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö: {e}")

def get_statistics():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""
    print("\nüìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç–æ—Ä–≥–æ–≤–ª–∏:")
    try:
        response = requests.get(f"{API_BASE}/api/statistics")
        if response.status_code == 200:
            data = response.json()
            stats = data.get('statistics', {})
            print(f"   –í—Å–µ–≥–æ —Å–¥–µ–ª–æ–∫: {stats.get('total_trades', 0)}")
            print(f"   –ü—Ä–∏–±—ã–ª—å–Ω—ã–µ —Å–¥–µ–ª–∫–∏: {stats.get('winning_trades', 0)}")
            print(f"   –£–±—ã—Ç–æ—á–Ω—ã–µ —Å–¥–µ–ª–∫–∏: {stats.get('losing_trades', 0)}")
            print(f"   –û–±—â–∞—è –ø—Ä–∏–±—ã–ª—å: ${stats.get('total_profit', 0):.2f}")
            print(f"   –ü—Ä–æ—Å–∞–¥–∫–∞: {stats.get('current_drawdown', 0):.2f}%")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö: {e}")

def get_predictions():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π"""
    print("\nüéØ –¢–æ—Ä–≥–æ–≤—ã–µ —Å–∏–≥–Ω–∞–ª—ã:")
    try:
        response = requests.get(f"{API_BASE}/api/predictions")
        if response.status_code == 200:
            data = response.json()
            signals = data.get('signals', [])
            if signals:
                for signal in signals:
                    direction_emoji = "üìà" if signal['direction'] == 'BUY' else "üìâ" if signal['direction'] == 'SELL' else "‚û°Ô∏è"
                    print(f"   {direction_emoji} {signal['symbol']}: {signal['direction']} (—É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {signal['confidence']*100:.1f}%)")
            else:
                print("   –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–∏–≥–Ω–∞–ª–æ–≤")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö: {e}")

def get_positions():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–π"""
    print("\nüìã –û—Ç–∫—Ä—ã—Ç—ã–µ –ø–æ–∑–∏—Ü–∏–∏:")
    try:
        response = requests.get(f"{API_BASE}/api/positions")
        if response.status_code == 200:
            data = response.json()
            positions = data.get('positions', [])
            if positions:
                for pos in positions:
                    profit_emoji = "üìà" if pos.get('profit', 0) >= 0 else "üìâ"
                    print(f"   {profit_emoji} {pos.get('symbol', 'N/A')}: {pos.get('type', 'N/A')} - ${pos.get('profit', 0):.2f}")
            else:
                print("   –ù–µ—Ç –æ—Ç–∫—Ä—ã—Ç—ã—Ö –ø–æ–∑–∏—Ü–∏–π")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö: {e}")

def burn_tokens(amount):
    """–°–∂–∏–≥–∞–Ω–∏–µ —Ç–æ–∫–µ–Ω–æ–≤"""
    print(f"\nüî• –°–∂–∏–≥–∞–Ω–∏–µ {amount} —Ç–æ–∫–µ–Ω–æ–≤...")
    try:
        response = requests.post(
            f"{API_BASE}/api/token/burn",
            json={"amount": amount, "reason": "Demo burn"}
        )
        if response.status_code == 200:
            data = response.json()
            print(f"‚úÖ {data['message']}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–∂–∏–≥–∞–Ω–∏—è: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–∂–∏–≥–∞–Ω–∏—è: {e}")

def monitor_bot():
    """–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –±–æ—Ç–∞ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏"""
    print("\nüîÑ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –±–æ—Ç–∞ (–Ω–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏):")
    print("-" * 60)
    
    try:
        while True:
            # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞
            response = requests.get(f"{API_BASE}/api/status")
            if response.status_code == 200:
                data = response.json()
                status_emoji = "üü¢" if data['is_running'] else "üî¥"
                timestamp = datetime.now().strftime("%H:%M:%S")
                print(f"[{timestamp}] {status_emoji} –ë–æ—Ç: {'–†–∞–±–æ—Ç–∞–µ—Ç' if data['is_running'] else '–û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'} | "
                      f"–ü–æ–∑–∏—Ü–∏–∏: {data['open_positions']} | "
                      f"–ë–∞–ª–∞–Ω—Å: ${data['balance']:.2f}")
            
            time.sleep(5)  # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥
            
    except KeyboardInterrupt:
        print("\n‚èπÔ∏è –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print_header()
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞
    if not check_bot_status():
        print("‚ùå –ë–æ—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –æ–Ω –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:8000")
        sys.exit(1)
    
    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    if start_bot():
        time.sleep(2)  # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞
        
        # –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
        get_account_info()
        get_token_info()
        get_statistics()
        get_predictions()
        get_positions()
        
        # –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Å–∂–∏–≥–∞–Ω–∏—è —Ç–æ–∫–µ–Ω–æ–≤
        burn_tokens(100)
        
        # –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
        monitor_bot()
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞")

if __name__ == "__main__":
    main()